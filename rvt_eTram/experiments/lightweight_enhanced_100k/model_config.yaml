# @package _global_
defaults:
  - override /model: rnndet

model:
  backbone:
    name: MaxViTRNN
    compile:
      enable: False
      args:
        mode: reduce-overhead
    input_channels: 20
    enable_masking: False
    partition_split_32: 2
    embed_dim: 64
    dim_multiplier: [1, 2, 4, 8]
    num_blocks: [1, 1, 1, 1]
    T_max_chrono_init: [4, 8, 16, 32]
    use_enhanced_convlstm: True  # Enable LightweightEnhancedConvLSTM
    stem:
      patch_size: 4
    stage:
      downsample:
        type: patch
        overlap: True
        norm_affine: True
      attention:
        use_torch_mha: False
        partition_size: ???
        dim_head: 32
        attention_bias: True
        mlp_activation: gelu
        mlp_gated: False
        mlp_bias: True
        mlp_ratio: 4
        drop_mlp: 0
        drop_path: 0
        ls_init_value: 1e-5
      lstm:
        dws_conv: False
        dws_conv_only_hidden: True
        dws_conv_kernel_size: 3
        drop_cell_update: 0
        # Enhanced ConvLSTM specific parameters
        enhancement_ratio: 0.05  # 5% parameter overhead for lightweight enhancement
        small_object_threshold: 0.3  # Threshold for identifying small object regions
  fpn:
    name: PAFPN
    compile:
      enable: False
      args:
        mode: reduce-overhead
    depth: 0.67 # round(depth * 3) == num bottleneck blocks
    # Use 3-scale FPN for stability (based on CLAUDE.md experimental results)
    in_stages: [2, 3, 4]  # P2, P3, P4 (avoiding P1 noise issues)
    width: 1.0
    in_channels: [128, 256, 512]  # Corresponding to stages 2, 3, 4
  head:
    name: YOLOXHead
    compile:
      enable: False
      args:
        mode: reduce-overhead
    num_classes: ???  # Will be set during training
    in_channels: [128, 256, 512]
    strides: [8, 16, 32]  # Corresponding to P2, P3, P4
    postprocess:
      score_threshold: 0.001
      nms_threshold: 0.65
      class_agnostic: False