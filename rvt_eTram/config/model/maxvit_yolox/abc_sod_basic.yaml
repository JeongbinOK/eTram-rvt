# @package _global_
defaults:
  - override /model: rnndet

model:
  backbone:
    name: MaxViTRNN
    compile:
      enable: False
      args:
        mode: reduce-overhead
    input_channels: 20
    enable_masking: False
    partition_split_32: 2
    embed_dim: 64
    dim_multiplier: [1, 2, 4, 8]
    num_blocks: [1, 1, 1, 1]
    T_max_chrono_init: [4, 8, 16, 32]
    stem:
      patch_size: 4  # Standard patch size for ABC
    stage:
      downsample:
        type: patch
        overlap: True
        norm_affine: True
      attention:
        use_torch_mha: False
        partition_size: ???
        dim_head: 32
        attention_bias: True
        mlp_activation: gelu
        mlp_gated: False
        mlp_bias: True
        mlp_ratio: 4
        drop_mlp: 0
        drop_path: 0
        ls_init_value: 1e-5
      lstm:
        dws_conv: False
        dws_conv_only_hidden: True
        dws_conv_kernel_size: 3
        drop_cell_update: 0
  fpn:
    name: PAFPN
    compile:
      enable: False
      args:
        mode: reduce-overhead
    depth: 0.67 # round(depth * 3) == num bottleneck blocks
    # stage 1 is the first and len(num_layers) is the last
    in_stages: [1, 2, 3, 4]  # 4-scale FPN with P1 features for small objects
    depthwise: False
    act: "silu"
  head:
    name: ABC  # ABC Head instead of YoloX
    compile:
      enable: False
      args:
        mode: reduce-overhead
    depthwise: False
    act: "silu"
    
    # ABC-specific parameters
    use_auxiliary: True
    num_small_classes: 3  # Motorcycle, Bicycle, Pedestrian
    small_classes: [2, 3, 4]  # Class indices for small objects
    aux_scales: [0, 1]  # P1, P2 scales for auxiliary detection
    main_loss_weight: 1.0  # Weight for main detection loss
    aux_loss_weight: 2.0  # Weight for auxiliary small object loss
    enhanced_features: True  # Enhanced feature processing in auxiliary detector
    
    # Size-aware loss parameters (for main head)
    size_aware_loss: True
    size_aware_weight: 2.0
    small_threshold: 1024  # 32x32 pixels
    medium_threshold: 9216  # 96x96 pixels
    weight_type: "exponential"  # exponential weighting for smaller objects
    
    # Training parameters
    use_l1: False
    
  postprocess:
    confidence_threshold: 0.1
    nms_threshold: 0.45